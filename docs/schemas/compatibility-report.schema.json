{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://personal-os.dev/schemas/compatibility-report.schema.json",
  "title": "Compatibility Report",
  "description": "Detailed report analyzing backward compatibility between two schema versions. Identifies breaking changes, additive changes, and provides version bump recommendations. Generated by BackwardCompatibilityChecker.check() and consumed by SchemaEditor and CompatibilityViewer components.",
  "type": "object",
  "required": [
    "report_id",
    "schema_id",
    "old_version",
    "new_version",
    "compatible",
    "generated_at"
  ],
  "properties": {
    "report_id": {
      "type": "string",
      "description": "Unique identifier for this compatibility report",
      "pattern": "^compat_[a-z0-9]{6,}$",
      "examples": ["compat_abc123", "compat_v1_v2_20251024"]
    },
    "schema_id": {
      "type": "string",
      "description": "Schema being analyzed",
      "examples": ["observation-transaction", "canonical-payment"]
    },
    "old_version": {
      "type": "string",
      "description": "Previous schema version (baseline)",
      "pattern": "^v?\\d+\\.\\d+\\.\\d+$",
      "examples": ["v1.0.0", "v1.2.3"]
    },
    "new_version": {
      "type": "string",
      "description": "New schema version being compared",
      "pattern": "^v?\\d+\\.\\d+\\.\\d+$",
      "examples": ["v2.0.0", "v1.3.0"]
    },
    "compatible": {
      "type": "boolean",
      "description": "Overall compatibility assessment. True if new version is backward compatible with old version (consumers of old version can read new version data)."
    },
    "compatibility_level": {
      "type": "string",
      "enum": ["fully_compatible", "backward_compatible", "forward_compatible", "breaking"],
      "description": "Detailed compatibility level assessment",
      "examples": ["fully_compatible", "breaking"]
    },
    "breaking_changes": {
      "type": "array",
      "description": "List of breaking changes that prevent backward compatibility",
      "items": {
        "type": "object",
        "required": ["field", "change_type", "severity"],
        "properties": {
          "field": {
            "type": "string",
            "description": "Field name that changed",
            "examples": ["date", "amount", "category"]
          },
          "change_type": {
            "type": "string",
            "enum": [
              "field_removed",
              "type_changed",
              "format_changed",
              "required_added",
              "constraint_tightened",
              "enum_value_removed",
              "default_changed"
            ],
            "description": "Type of breaking change detected"
          },
          "severity": {
            "type": "string",
            "enum": ["CRITICAL", "MAJOR", "MINOR"],
            "description": "Severity of the breaking change. CRITICAL: Data loss risk. MAJOR: Requires migration. MINOR: Warning only."
          },
          "description": {
            "type": "string",
            "description": "Human-readable description of the breaking change",
            "examples": [
              "Field 'amount' type changed from 'string' to 'number'",
              "Field 'status' removed from schema"
            ]
          },
          "old_definition": {
            "type": "object",
            "description": "Previous field definition (JSON Schema fragment)"
          },
          "new_definition": {
            "type": ["object", "null"],
            "description": "New field definition (null if field was removed)"
          },
          "impact": {
            "type": "object",
            "description": "Impact analysis for this change",
            "properties": {
              "affected_records": {
                "type": ["integer", "null"],
                "description": "Estimated number of records affected (null if unknown)"
              },
              "data_loss_risk": {
                "type": "string",
                "enum": ["none", "low", "medium", "high"],
                "description": "Risk of data loss from this change"
              },
              "migration_required": {
                "type": "boolean",
                "description": "Whether data migration is required to handle this change"
              }
            }
          },
          "recommendation": {
            "type": "string",
            "description": "Recommended action to handle this breaking change",
            "examples": [
              "Create migration to convert existing string amounts to numbers",
              "Revert this change or mark field as optional instead of removing"
            ]
          }
        }
      }
    },
    "additive_changes": {
      "type": "array",
      "description": "List of additive (non-breaking) changes",
      "items": {
        "type": "object",
        "required": ["field", "change_type"],
        "properties": {
          "field": { "type": "string" },
          "change_type": {
            "type": "string",
            "enum": [
              "field_added",
              "constraint_relaxed",
              "enum_value_added",
              "optional_to_required_safe",
              "default_added"
            ]
          },
          "description": { "type": "string" },
          "new_definition": {
            "type": "object",
            "description": "New field definition"
          },
          "backward_compatible": {
            "type": "boolean",
            "description": "Whether this specific change is backward compatible"
          }
        }
      }
    },
    "non_functional_changes": {
      "type": "array",
      "description": "Changes that don't affect compatibility (descriptions, examples, etc.)",
      "items": {
        "type": "object",
        "properties": {
          "field": { "type": "string" },
          "change_type": {
            "type": "string",
            "enum": ["description_changed", "example_changed", "title_changed", "comment_added"]
          },
          "description": { "type": "string" }
        }
      }
    },
    "recommended_version_bump": {
      "type": "string",
      "enum": ["PATCH", "MINOR", "MAJOR"],
      "description": "Recommended semantic version bump based on detected changes. PATCH: Non-functional changes only. MINOR: Additive changes. MAJOR: Breaking changes."
    },
    "suggested_new_version": {
      "type": "string",
      "description": "Suggested version number after applying recommended bump",
      "pattern": "^v?\\d+\\.\\d+\\.\\d+$",
      "examples": ["v2.0.0", "v1.3.0"]
    },
    "confidence_score": {
      "type": "number",
      "minimum": 0,
      "maximum": 100,
      "description": "Confidence score (0-100) for the compatibility assessment. Lower scores indicate edge cases or ambiguity."
    },
    "warnings": {
      "type": "array",
      "description": "Warnings about potential issues that are not strictly breaking changes",
      "items": {
        "type": "object",
        "properties": {
          "field": { "type": "string" },
          "warning_type": {
            "type": "string",
            "enum": [
              "semantic_change",
              "behavioral_change",
              "performance_impact",
              "validation_stricter"
            ]
          },
          "description": { "type": "string" },
          "recommendation": { "type": "string" }
        }
      }
    },
    "summary": {
      "type": "object",
      "description": "Summary statistics for the compatibility report",
      "properties": {
        "total_fields_old": {
          "type": "integer",
          "description": "Number of fields in old schema"
        },
        "total_fields_new": {
          "type": "integer",
          "description": "Number of fields in new schema"
        },
        "fields_removed": {
          "type": "integer",
          "description": "Number of fields removed (breaking)"
        },
        "fields_added": {
          "type": "integer",
          "description": "Number of fields added (additive)"
        },
        "fields_modified": {
          "type": "integer",
          "description": "Number of fields with changes"
        },
        "breaking_change_count": {
          "type": "integer",
          "description": "Total number of breaking changes"
        },
        "additive_change_count": {
          "type": "integer",
          "description": "Total number of additive changes"
        }
      }
    },
    "migration_required": {
      "type": "boolean",
      "description": "Whether a data migration is required to upgrade to the new version"
    },
    "migration_plan_id": {
      "type": ["string", "null"],
      "description": "ID of generated migration plan (if migration_required=true)",
      "examples": ["mig_v1_to_v2"]
    },
    "generated_at": {
      "type": "string",
      "format": "date-time",
      "description": "Timestamp when this report was generated"
    },
    "generated_by": {
      "type": "string",
      "description": "User or system that generated this report",
      "examples": ["data_engineer_123", "compatibility_checker_service"]
    },
    "metadata": {
      "type": "object",
      "description": "Additional metadata",
      "properties": {
        "analysis_duration_ms": {
          "type": "integer",
          "description": "Time taken to generate this report (milliseconds)"
        },
        "old_schema_definition": {
          "type": "object",
          "description": "Complete old schema for reference"
        },
        "new_schema_definition": {
          "type": "object",
          "description": "Complete new schema for reference"
        }
      }
    }
  },
  "additionalProperties": false,
  "examples": [
    {
      "$comment": "Example 1: Finance - Backward compatible change (add optional field)",
      "report_id": "compat_v1.0_to_v1.1",
      "schema_id": "observation-transaction",
      "old_version": "v1.0.0",
      "new_version": "v1.1.0",
      "compatible": true,
      "compatibility_level": "fully_compatible",
      "breaking_changes": [],
      "additive_changes": [
        {
          "field": "category",
          "change_type": "field_added",
          "description": "Added optional 'category' field for transaction categorization",
          "new_definition": {
            "type": "string",
            "description": "Transaction category",
            "required": false
          },
          "backward_compatible": true
        }
      ],
      "non_functional_changes": [],
      "recommended_version_bump": "MINOR",
      "suggested_new_version": "v1.1.0",
      "confidence_score": 100,
      "warnings": [],
      "summary": {
        "total_fields_old": 3,
        "total_fields_new": 4,
        "fields_removed": 0,
        "fields_added": 1,
        "fields_modified": 0,
        "breaking_change_count": 0,
        "additive_change_count": 1
      },
      "migration_required": false,
      "migration_plan_id": null,
      "generated_at": "2025-10-24T10:00:00Z",
      "generated_by": "data_engineer_123",
      "metadata": {
        "analysis_duration_ms": 45
      }
    },
    {
      "$comment": "Example 2: Finance - Breaking change (date format changed)",
      "report_id": "compat_v1_to_v2",
      "schema_id": "observation-transaction",
      "old_version": "v1.0.0",
      "new_version": "v2.0.0",
      "compatible": false,
      "compatibility_level": "breaking",
      "breaking_changes": [
        {
          "field": "date",
          "change_type": "format_changed",
          "severity": "MAJOR",
          "description": "Field 'date' format changed from 'YYYY-MM-DD' to ISO 8601 datetime",
          "old_definition": {
            "type": "string",
            "pattern": "^\\d{4}-\\d{2}-\\d{2}$",
            "description": "Transaction date in YYYY-MM-DD format"
          },
          "new_definition": {
            "type": "string",
            "format": "date-time",
            "description": "Transaction datetime in ISO 8601 format"
          },
          "impact": {
            "affected_records": 1234567,
            "data_loss_risk": "low",
            "migration_required": true
          },
          "recommendation": "Create migration to convert existing dates: CONCAT(date, 'T00:00:00Z')"
        }
      ],
      "additive_changes": [],
      "non_functional_changes": [],
      "recommended_version_bump": "MAJOR",
      "suggested_new_version": "v2.0.0",
      "confidence_score": 95,
      "warnings": [
        {
          "field": "date",
          "warning_type": "behavioral_change",
          "description": "Timezone information will be added (defaulting to UTC). Existing consumers expecting simple dates may need updates.",
          "recommendation": "Notify downstream systems about timezone addition"
        }
      ],
      "summary": {
        "total_fields_old": 3,
        "total_fields_new": 3,
        "fields_removed": 0,
        "fields_added": 0,
        "fields_modified": 1,
        "breaking_change_count": 1,
        "additive_change_count": 0
      },
      "migration_required": true,
      "migration_plan_id": "mig_v1_to_v2",
      "generated_at": "2025-10-24T09:00:00Z",
      "generated_by": "data_engineer_789",
      "metadata": {
        "analysis_duration_ms": 120
      }
    },
    {
      "$comment": "Example 3: Healthcare - Critical breaking change (field removed)",
      "report_id": "compat_patient_v1_v2",
      "schema_id": "observation-patient-record",
      "old_version": "v1.0.0",
      "new_version": "v2.0.0",
      "compatible": false,
      "compatibility_level": "breaking",
      "breaking_changes": [
        {
          "field": "patient_ssn",
          "change_type": "field_removed",
          "severity": "CRITICAL",
          "description": "Field 'patient_ssn' removed from schema",
          "old_definition": {
            "type": "string",
            "pattern": "^\\d{3}-\\d{2}-\\d{4}$",
            "description": "Patient Social Security Number"
          },
          "new_definition": null,
          "impact": {
            "affected_records": 50000,
            "data_loss_risk": "high",
            "migration_required": true
          },
          "recommendation": "Migrate patient_ssn to separate PII-protected table before removing. Ensure HIPAA compliance."
        }
      ],
      "additive_changes": [
        {
          "field": "patient_id",
          "change_type": "field_added",
          "description": "Added 'patient_id' as replacement identifier",
          "new_definition": {
            "type": "string",
            "description": "Internal patient identifier (non-PII)"
          },
          "backward_compatible": false
        }
      ],
      "non_functional_changes": [],
      "recommended_version_bump": "MAJOR",
      "suggested_new_version": "v2.0.0",
      "confidence_score": 100,
      "warnings": [
        {
          "field": "patient_ssn",
          "warning_type": "semantic_change",
          "description": "Removing SSN may break downstream systems that rely on it for patient matching",
          "recommendation": "Audit all downstream systems and update to use patient_id instead"
        }
      ],
      "summary": {
        "total_fields_old": 4,
        "total_fields_new": 4,
        "fields_removed": 1,
        "fields_added": 1,
        "fields_modified": 0,
        "breaking_change_count": 1,
        "additive_change_count": 1
      },
      "migration_required": true,
      "migration_plan_id": "mig_patient_v1_v2",
      "generated_at": "2025-10-24T11:00:00Z",
      "generated_by": "healthcare_engineer_101",
      "metadata": {
        "analysis_duration_ms": 200
      }
    },
    {
      "$comment": "Example 4: Legal - Multiple changes with warnings",
      "report_id": "compat_case_v2_v3",
      "schema_id": "observation-case",
      "old_version": "v2.0.0",
      "new_version": "v3.0.0",
      "compatible": false,
      "compatibility_level": "breaking",
      "breaking_changes": [
        {
          "field": "case_number",
          "change_type": "constraint_tightened",
          "severity": "MAJOR",
          "description": "Field 'case_number' pattern constraint changed to enforce strict format",
          "old_definition": {
            "type": "string",
            "pattern": "^[A-Z0-9-]+$"
          },
          "new_definition": {
            "type": "string",
            "pattern": "^\\d{4}-[A-Z]{2}-\\d{6}$",
            "description": "Format: YYYY-ST-######"
          },
          "impact": {
            "affected_records": 567,
            "data_loss_risk": "low",
            "migration_required": true
          },
          "recommendation": "Validate and reformat existing case numbers. 567 cases have non-conforming format."
        }
      ],
      "additive_changes": [
        {
          "field": "case_type",
          "change_type": "field_added",
          "description": "Added required 'case_type' field",
          "new_definition": {
            "type": "string",
            "enum": ["civil", "criminal", "family"],
            "required": true
          },
          "backward_compatible": false
        }
      ],
      "non_functional_changes": [
        {
          "field": "attorney",
          "change_type": "description_changed",
          "description": "Updated description to clarify attorney field represents lead attorney"
        }
      ],
      "recommended_version_bump": "MAJOR",
      "suggested_new_version": "v3.0.0",
      "confidence_score": 90,
      "warnings": [
        {
          "field": "case_number",
          "warning_type": "validation_stricter",
          "description": "Stricter pattern validation may reject valid legacy case numbers",
          "recommendation": "Consider keeping old pattern as alternative for legacy cases"
        },
        {
          "field": "case_type",
          "warning_type": "semantic_change",
          "description": "Adding required field is technically breaking, but marked as additive_change",
          "recommendation": "Ensure migration populates case_type from case_number prefix or manual classification"
        }
      ],
      "summary": {
        "total_fields_old": 5,
        "total_fields_new": 6,
        "fields_removed": 0,
        "fields_added": 1,
        "fields_modified": 1,
        "breaking_change_count": 1,
        "additive_change_count": 1
      },
      "migration_required": true,
      "migration_plan_id": "mig_case_v2_v3",
      "generated_at": "2025-10-24T12:00:00Z",
      "generated_by": "legal_engineer_202",
      "metadata": {
        "analysis_duration_ms": 350
      }
    }
  ],
  "notes": [
    "This schema is OUTPUT of BackwardCompatibilityChecker.check() and INPUT to CompatibilityViewer component",
    "compatible=true: New version is backward compatible (consumers of old version can read new version data)",
    "compatibility_level provides more nuanced assessment than boolean compatible flag",
    "Breaking changes with severity=CRITICAL indicate data loss risk and require careful review",
    "recommended_version_bump follows semantic versioning: PATCH (non-functional), MINOR (additive), MAJOR (breaking)",
    "confidence_score <100 indicates edge cases or ambiguity in compatibility assessment",
    "warnings flag potential issues that are not strictly breaking but may cause problems",
    "migration_required=true: BackwardCompatibilityChecker recommends creating migration plan",
    "summary provides quick overview statistics for dashboard/UI display",
    "Report generation should complete in <500ms for typical schema (20-50 fields)"
  ]
}
