{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://personal-os.dev/schemas/migration-plan.schema.json",
  "title": "Migration Plan",
  "description": "Defines a complete plan for migrating data from one schema version to another. Includes transformation steps, affected records, duration estimates, rollback strategy, and validation rules. Generated by MigrationEngine.generatePlan() and executed by MigrationEngine.execute().",
  "type": "object",
  "required": [
    "migration_id",
    "schema_id",
    "from_version",
    "to_version",
    "steps",
    "affected_records",
    "estimated_duration"
  ],
  "properties": {
    "migration_id": {
      "type": "string",
      "description": "Unique identifier for this migration plan",
      "pattern": "^mig_[a-z0-9]{6,}$",
      "examples": ["mig_abc123", "mig_v1_to_v2_20251024"]
    },
    "schema_id": {
      "type": "string",
      "description": "Schema being migrated",
      "examples": ["observation-transaction", "canonical-payment", "observation-patient-record"]
    },
    "from_version": {
      "type": "string",
      "description": "Source schema version (semantic version)",
      "pattern": "^v?\\d+\\.\\d+\\.\\d+$",
      "examples": ["v1.0.0", "v1.2.3"]
    },
    "to_version": {
      "type": "string",
      "description": "Target schema version (semantic version)",
      "pattern": "^v?\\d+\\.\\d+\\.\\d+$",
      "examples": ["v2.0.0", "v1.3.0"]
    },
    "steps": {
      "type": "array",
      "description": "Ordered list of migration steps to execute",
      "minItems": 1,
      "items": {
        "type": "object",
        "required": ["step_number", "action", "description"],
        "properties": {
          "step_number": {
            "type": "integer",
            "minimum": 1,
            "description": "Sequential step number (1, 2, 3, ...)"
          },
          "action": {
            "type": "string",
            "enum": [
              "backup_data",
              "transform_field",
              "add_field",
              "remove_field",
              "rename_field",
              "change_type",
              "validate_data",
              "verify_migration",
              "update_indexes",
              "cleanup"
            ],
            "description": "Type of migration action to perform"
          },
          "description": {
            "type": "string",
            "description": "Human-readable description of what this step does",
            "examples": [
              "Backup v1 data to observations_backup_v1 table",
              "Convert date field from YYYY-MM-DD to ISO 8601 format",
              "Add default value for new optional category field"
            ]
          },
          "field": {
            "type": "string",
            "description": "Field name being transformed (if applicable)",
            "examples": ["date", "amount", "category"]
          },
          "transformation": {
            "type": "string",
            "description": "SQL transformation expression or JavaScript function",
            "examples": [
              "CONCAT(date, 'T00:00:00Z')",
              "ROUND(amount, 2)",
              "(value) => value?.toUpperCase()"
            ]
          },
          "affected_records": {
            "type": "integer",
            "minimum": 0,
            "description": "Number of records affected by this step"
          },
          "estimated_duration": {
            "type": "string",
            "description": "Estimated time to complete this step",
            "examples": ["5 seconds", "2 minutes", "10 minutes"]
          },
          "reversible": {
            "type": "boolean",
            "description": "Whether this step can be automatically reversed (for rollback)"
          },
          "critical": {
            "type": "boolean",
            "description": "If true, migration stops on failure. If false, logs error and continues."
          }
        }
      }
    },
    "affected_records": {
      "type": "integer",
      "minimum": 0,
      "description": "Total number of records that will be migrated",
      "examples": [1234567, 50000, 0]
    },
    "estimated_duration": {
      "type": "string",
      "description": "Estimated total migration duration",
      "examples": ["2 minutes", "10 minutes", "1 hour"]
    },
    "estimated_duration_seconds": {
      "type": "integer",
      "minimum": 0,
      "description": "Estimated duration in seconds (for programmatic use)"
    },
    "batch_size": {
      "type": "integer",
      "minimum": 1,
      "default": 10000,
      "description": "Number of records to process per batch"
    },
    "rollback_strategy": {
      "type": "object",
      "description": "Strategy for rolling back if migration fails",
      "properties": {
        "backup_table": {
          "type": "string",
          "description": "Name of table containing backup data",
          "examples": ["observations_backup_v1"]
        },
        "automatic": {
          "type": "boolean",
          "default": true,
          "description": "Whether to automatically rollback on failure"
        },
        "steps": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "description": { "type": "string" },
              "sql": { "type": "string" }
            }
          },
          "description": "Manual rollback steps if automatic rollback not available"
        }
      }
    },
    "validation_rules": {
      "type": "array",
      "description": "Validation rules to verify migration success",
      "items": {
        "type": "object",
        "properties": {
          "rule_id": { "type": "string" },
          "description": { "type": "string" },
          "sql_query": {
            "type": "string",
            "description": "SQL query that should return 0 rows if validation passes"
          },
          "expected_result": {
            "type": ["number", "string", "boolean"],
            "description": "Expected result of validation query"
          }
        }
      }
    },
    "breaking_changes": {
      "type": "array",
      "description": "List of breaking changes being addressed by this migration",
      "items": {
        "type": "object",
        "properties": {
          "field": { "type": "string" },
          "change_type": { "type": "string" },
          "description": { "type": "string" }
        }
      }
    },
    "dry_run_supported": {
      "type": "boolean",
      "default": true,
      "description": "Whether this migration supports dry-run mode (validation without execution)"
    },
    "parallel_execution": {
      "type": "boolean",
      "default": false,
      "description": "Whether batches can be processed in parallel (requires idempotent operations)"
    },
    "status": {
      "type": "string",
      "enum": ["draft", "approved", "executing", "completed", "failed", "rolled_back"],
      "description": "Current status of this migration plan"
    },
    "created_at": {
      "type": "string",
      "format": "date-time",
      "description": "When this migration plan was created"
    },
    "created_by": {
      "type": "string",
      "description": "User or system that created this migration plan"
    },
    "approved_by": {
      "type": ["string", "null"],
      "description": "User who approved this migration (required for breaking changes)"
    },
    "approved_at": {
      "type": ["string", "null"],
      "format": "date-time",
      "description": "When this migration was approved"
    },
    "executed_at": {
      "type": ["string", "null"],
      "format": "date-time",
      "description": "When this migration started executing"
    },
    "completed_at": {
      "type": ["string", "null"],
      "format": "date-time",
      "description": "When this migration completed (success or failure)"
    },
    "metadata": {
      "type": "object",
      "description": "Additional metadata about this migration",
      "properties": {
        "compatibility_report_id": {
          "type": "string",
          "description": "ID of compatibility report that generated this migration"
        },
        "impact_analysis": {
          "type": "object",
          "properties": {
            "downstream_systems": {
              "type": "array",
              "items": { "type": "string" },
              "description": "Systems that may be affected by this migration"
            },
            "data_loss_risk": {
              "type": "string",
              "enum": ["none", "low", "medium", "high"],
              "description": "Risk of data loss during migration"
            },
            "estimated_downtime": {
              "type": "string",
              "description": "Expected downtime during migration (or 'zero' if no downtime)"
            }
          }
        }
      }
    }
  },
  "additionalProperties": false,
  "examples": [
    {
      "$comment": "Example 1: Finance - Simple additive migration (add optional field)",
      "migration_id": "mig_v1.0_to_v1.1",
      "schema_id": "observation-transaction",
      "from_version": "v1.0.0",
      "to_version": "v1.1.0",
      "steps": [
        {
          "step_number": 1,
          "action": "add_field",
          "description": "Add optional category field with null default",
          "field": "category",
          "transformation": "NULL",
          "affected_records": 1234567,
          "estimated_duration": "30 seconds",
          "reversible": true,
          "critical": false
        },
        {
          "step_number": 2,
          "action": "verify_migration",
          "description": "Verify all records have category field (even if null)",
          "affected_records": 1000,
          "estimated_duration": "5 seconds",
          "reversible": false,
          "critical": true
        }
      ],
      "affected_records": 1234567,
      "estimated_duration": "35 seconds",
      "estimated_duration_seconds": 35,
      "batch_size": 10000,
      "rollback_strategy": {
        "backup_table": null,
        "automatic": true,
        "steps": [
          {
            "description": "Remove category field",
            "sql": "ALTER TABLE observations DROP COLUMN category"
          }
        ]
      },
      "validation_rules": [
        {
          "rule_id": "validate_field_exists",
          "description": "All records should have category field",
          "sql_query": "SELECT COUNT(*) FROM observations WHERE category IS NOT NULL AND category NOT IN (SELECT DISTINCT category FROM valid_categories)",
          "expected_result": 0
        }
      ],
      "breaking_changes": [],
      "dry_run_supported": true,
      "parallel_execution": false,
      "status": "approved",
      "created_at": "2025-10-24T10:00:00Z",
      "created_by": "data_engineer_123",
      "approved_by": "lead_engineer_456",
      "approved_at": "2025-10-24T10:15:00Z",
      "metadata": {
        "impact_analysis": {
          "downstream_systems": [],
          "data_loss_risk": "none",
          "estimated_downtime": "zero"
        }
      }
    },
    {
      "$comment": "Example 2: Finance - Breaking change migration (date format change)",
      "migration_id": "mig_v1_to_v2",
      "schema_id": "observation-transaction",
      "from_version": "v1.0.0",
      "to_version": "v2.0.0",
      "steps": [
        {
          "step_number": 1,
          "action": "backup_data",
          "description": "Backup v1 data to observations_backup_v1 table",
          "affected_records": 1234567,
          "estimated_duration": "1 minute",
          "reversible": false,
          "critical": true
        },
        {
          "step_number": 2,
          "action": "transform_field",
          "description": "Convert date from YYYY-MM-DD to ISO 8601 (YYYY-MM-DDTHH:MM:SSZ)",
          "field": "date",
          "transformation": "CONCAT(date, 'T00:00:00Z')",
          "affected_records": 1234567,
          "estimated_duration": "2 minutes",
          "reversible": true,
          "critical": true
        },
        {
          "step_number": 3,
          "action": "validate_data",
          "description": "Verify all dates are valid ISO 8601 format",
          "field": "date",
          "affected_records": 1234567,
          "estimated_duration": "30 seconds",
          "reversible": false,
          "critical": true
        },
        {
          "step_number": 4,
          "action": "verify_migration",
          "description": "Sample 1000 records and verify transformation correctness",
          "affected_records": 1000,
          "estimated_duration": "5 seconds",
          "reversible": false,
          "critical": true
        },
        {
          "step_number": 5,
          "action": "cleanup",
          "description": "Archive backup table after successful migration (after 30 days)",
          "affected_records": 0,
          "estimated_duration": "instant",
          "reversible": false,
          "critical": false
        }
      ],
      "affected_records": 1234567,
      "estimated_duration": "3 minutes 35 seconds",
      "estimated_duration_seconds": 215,
      "batch_size": 10000,
      "rollback_strategy": {
        "backup_table": "observations_backup_v1",
        "automatic": true,
        "steps": [
          {
            "description": "Restore from backup table",
            "sql": "DELETE FROM observations; INSERT INTO observations SELECT * FROM observations_backup_v1;"
          },
          {
            "description": "Revert schema version",
            "sql": "UPDATE schema_versions SET active = true WHERE schema_id = 'observation-transaction' AND version = 'v1.0.0'"
          }
        ]
      },
      "validation_rules": [
        {
          "rule_id": "validate_iso8601_format",
          "description": "All dates should be valid ISO 8601 format",
          "sql_query": "SELECT COUNT(*) FROM observations WHERE date !~ '^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$'",
          "expected_result": 0
        },
        {
          "rule_id": "validate_no_data_loss",
          "description": "Record count should match backup",
          "sql_query": "SELECT COUNT(*) FROM observations",
          "expected_result": 1234567
        }
      ],
      "breaking_changes": [
        {
          "field": "date",
          "change_type": "format_changed",
          "description": "Changed date format from YYYY-MM-DD to ISO 8601"
        }
      ],
      "dry_run_supported": true,
      "parallel_execution": false,
      "status": "approved",
      "created_at": "2025-10-24T09:00:00Z",
      "created_by": "data_engineer_789",
      "approved_by": "engineering_director",
      "approved_at": "2025-10-24T09:30:00Z",
      "metadata": {
        "compatibility_report_id": "compat_v1_v2_20251024",
        "impact_analysis": {
          "downstream_systems": ["reporting_dashboard", "accounting_system", "tax_calculator"],
          "data_loss_risk": "low",
          "estimated_downtime": "5 minutes"
        }
      }
    },
    {
      "$comment": "Example 3: Healthcare - HIPAA compliance migration (add audit fields)",
      "migration_id": "mig_patient_hipaa_audit",
      "schema_id": "observation-patient-record",
      "from_version": "v1.0.0",
      "to_version": "v1.1.0",
      "steps": [
        {
          "step_number": 1,
          "action": "add_field",
          "description": "Add created_at timestamp for HIPAA audit trail",
          "field": "created_at",
          "transformation": "NOW()",
          "affected_records": 50000,
          "estimated_duration": "10 seconds",
          "reversible": true,
          "critical": true
        },
        {
          "step_number": 2,
          "action": "add_field",
          "description": "Add created_by user ID for HIPAA audit trail",
          "field": "created_by",
          "transformation": "'system_migration'",
          "affected_records": 50000,
          "estimated_duration": "10 seconds",
          "reversible": true,
          "critical": true
        },
        {
          "step_number": 3,
          "action": "verify_migration",
          "description": "Verify all records have audit fields",
          "affected_records": 50000,
          "estimated_duration": "5 seconds",
          "reversible": false,
          "critical": true
        }
      ],
      "affected_records": 50000,
      "estimated_duration": "25 seconds",
      "estimated_duration_seconds": 25,
      "batch_size": 5000,
      "rollback_strategy": {
        "backup_table": "patient_records_backup",
        "automatic": true
      },
      "validation_rules": [
        {
          "rule_id": "validate_audit_fields",
          "description": "All records must have created_at and created_by",
          "sql_query": "SELECT COUNT(*) FROM patient_records WHERE created_at IS NULL OR created_by IS NULL",
          "expected_result": 0
        }
      ],
      "breaking_changes": [],
      "dry_run_supported": true,
      "parallel_execution": false,
      "status": "completed",
      "created_at": "2025-10-20T08:00:00Z",
      "created_by": "healthcare_engineer_101",
      "approved_by": "compliance_officer",
      "approved_at": "2025-10-20T09:00:00Z",
      "executed_at": "2025-10-20T10:00:00Z",
      "completed_at": "2025-10-20T10:00:25Z",
      "metadata": {
        "impact_analysis": {
          "downstream_systems": ["ehr_system"],
          "data_loss_risk": "none",
          "estimated_downtime": "zero"
        }
      }
    },
    {
      "$comment": "Example 4: E-commerce - Zero-record migration (schema only)",
      "migration_id": "mig_product_schema_only",
      "schema_id": "observation-product",
      "from_version": "v1.0.0",
      "to_version": "v1.1.0",
      "steps": [
        {
          "step_number": 1,
          "action": "add_field",
          "description": "Add optional variants field (no data to migrate)",
          "field": "variants",
          "transformation": "[]",
          "affected_records": 0,
          "estimated_duration": "instant",
          "reversible": true,
          "critical": false
        }
      ],
      "affected_records": 0,
      "estimated_duration": "instant",
      "estimated_duration_seconds": 0,
      "batch_size": 10000,
      "rollback_strategy": {
        "automatic": true
      },
      "validation_rules": [],
      "breaking_changes": [],
      "dry_run_supported": true,
      "parallel_execution": false,
      "status": "completed",
      "created_at": "2025-10-24T11:00:00Z",
      "created_by": "ecommerce_engineer",
      "approved_by": "ecommerce_engineer",
      "approved_at": "2025-10-24T11:01:00Z",
      "executed_at": "2025-10-24T11:02:00Z",
      "completed_at": "2025-10-24T11:02:00Z"
    }
  ],
  "notes": [
    "Migration plans are generated by MigrationEngine.generatePlan() based on schema diffs",
    "Steps are executed sequentially in order (step_number ascending)",
    "If critical=true step fails, entire migration stops and triggers rollback",
    "If critical=false step fails, error is logged but migration continues",
    "batch_size determines how many records are processed per transaction",
    "dry_run_supported=true: Can test migration without actually modifying data",
    "parallel_execution=true: Batches can run concurrently (requires idempotent operations)",
    "rollback_strategy.automatic=true: System automatically reverts on failure",
    "validation_rules verify migration correctness after execution",
    "Breaking changes require approval from lead engineer or director",
    "estimated_duration is calculated based on affected_records and historical migration performance",
    "This schema is OUTPUT of MigrationEngine.generatePlan() and INPUT to MigrationEngine.execute()"
  ]
}
